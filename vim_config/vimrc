"Begin of vim config file

set shell=/bin/sh "Use a compatible shell 

set nocompatible "Not compatible with Vi settings
filetype off   "Vundle-required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'Markdown'
Plugin 'c.vim'
Plugin 'a.vim'
Plugin 'scrooloose/nerdTree'
Plugin 'syntastic'
Plugin 'Tagbar'
Plugin 'python-imports.vim'
Plugin 'jaxbot/semantic-highlight.vim'
Plugin 'gregsexton/MatchTag'
Plugin 'go.vim'
Plugin 'Go-Syntax'
Plugin 'airblade/vim-gitgutter'
Plugin 'ctrlp.vim'
Plugin 'Arduino-syntax-file'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'fatih/vim-go'
Plugin 'jalcine/cmake.vim'
Plugin 'SirVer/ultisnips'
Plugin 'vim-airline/vim-airline'
Plugin 'marciomazza/vim-brogrammer-theme'
Plugin 'vim-ruby/vim-ruby'
Plugin 'Valloric/YouCompleteMe'
Plugin 'vim-airline/vim-airline-themes'

call vundle#end()            " required
filetype plugin indent on    " required
""""""""""""""""""""""""""""""""
set secure
set backspace=indent,eol,start
set nobackup "No backup
set history=150		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching
set autoindent " indenting
set smartindent 
set showmatch
set antialias 
set showcmd 
set cursorline
set tabstop=3
set softtabstop=3
set shiftwidth=3
set noswapfile " No swapfile 
set nowb
set wildmenu 
set modeline
set ls=2 
set number " left-side line counter
set t_Co=256color "Enable 256 colors terminal
set hlsearch "highlight matched 
set autowrite
set shortmess=a
set cmdheight=2

syntax on "Enable syntax
colorscheme brogrammer 
autocmd FileType text setlocal textwidth=78

"Language interpreter/compiler execution
autocmd FileType python map pyr :!/usr/bin/env python %
autocmd FileType ruby map rbr :!/usr/bin/ruby %
autocmd FileType sh map shr :!/bin/sh %

"Language-specific options
autocmd FileType c map <F5> :make 
autocmd FileType cpp map <F5> :make 
autocmd FileType c map <C-h> :A<cr>
autocmd FileType cpp map <C-h> :A<cr>

"Make command 
set makeprg=/usr/bin/make\ -j\ 3

"Python imports
let g:PythonAutoAddImports = 1

"include paths
let &path.="/usr/include,/usr/local/include"

"YCM
let g:ycm_global_ycm_extra_conf = '/home/stefanoz/.ycm_extra_conf.py'
let g:ycm_confirm_extra_conf = 0
let g:ycm_python_binary_path = '/usr/bin/python3'
let g:ycm_min_num_of_chars_for_completion = 3
let g:ycm_auto_trigger = 1

"Syntastic 
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_python_python_exec = '/usr/bin/python'
let g:syntastic_python_checkers = ['pylint']
let g:syntastic_go_checkers = ['golint', 'govet', 'errcheck']
let g:syntastic_mode_map = { 'mode': 'active', 'passive_filetypes': [] }

"vim-go
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_interfaces = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_fmt_command = "goimports"
let g:go_play_open_browser = 0

"CtrlP
let g:ctrlp_map = '<c-p>'

"Airline 
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

"UltiSnips 
let g:UltiSnipsExpandTrigger = "<F8>"
let g:UltiSnipsJumpForwardTrigger = "<C-f>"
let g:UltiSnipsJumpBackwardTrigger = "<C-b>"

"Enable deoplete 
let g:deoplete#enable_at_startup = 1

"Various mapping
map <F2> :Tagbar<cr>
map <F3> :NERDTree<cr>
map <C-s> :SemanticHighlight<cr>
map <C-x> :SemanticHighlightRevert<cr>
map <C-e> :GitGutterEnable<cr>
map <C-d> :GitGutterDisable<cr>
map clpe :set paste<cr>
map clpd :set nopaste<cr>
map ssp :setlocal spell! spelllang=en_us<cr>
map sspd :setlocal nospell<cr>
map Q gq
map >> $ 
map pi :PluginInstall   
map ps :PluginSearch 
map pc :PluginClean 
map pl :PluginList<cr>

"Window movement / buffer ops.
" <C-k> : vim-go already uses <S-k>
nnoremap <S-h> <C-w>h
nnoremap <S-j> <C-w>j
nnoremap <C-k> <C-w>k 
nnoremap <S-l> <C-w>l
map osp :split 
map vsp :vsplit 
map bhd :hide<cr> 
map bon :only<cr>
map bls :ls<cr>
map bsw :b 
map bd :bdelete<cr> 

" Text formatter
map <F7> mzgg=G`z

" C / C++ compiling flags (if needed)
let g:C_CCompiler = "gcc"
let g:C_CFlags = "-O2 -pipe -Wall"
let g:CplusCompiler = "g++"
let g:C_CplusFlags = "-O2 -pipe -Wall"

""
if has('langmap') && exists('+langnoremap')
				set langnoremap
endif

if has('mouse') && has('gui') "mouse+gui 
				set mouse=a
endif

if has('gui_running') 
	set guifont=Ubuntu\ Mono
endif
"End of vimrc
